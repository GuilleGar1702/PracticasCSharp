<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Title.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASsAAAAnCAYAAABXEW57AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAEhElEQVR4Xu2bsY1UQRBELwIiAI8gEBZB
        IEgAPAyEMDAxMfFIggiwCAQ88jimhJD6r2pafdM993tPVdJzVtMzRW9RGGhvHH0e3Cb4OYgo+04UvBMR
        fLP5al4MImKzu4l6iwh3sTeqqchbpaLv3FfeZlzujZ3ZTTpvKqu9qKxqUVmtobIaqKx8VFa1qKzWUFkN
        VFY+KqtaVFZrqKwGKisflVUtKqs1VFYDlZWPyqoWldUaV1VWzya8GnxM8HbA7gWPBv/lfans3lWeDyKa
        hef3gN27ypNBRMwL+DFg91YQ9RYR7mJvVPN6ENG1lFV13mZc7o15AS3yxowBLDsj719U26TXEp7Lf4Gy
        ir7DzoDs9+NpZQcrM5VS3mrEvIAWeWOHQNacwuMr+g47A1qEx2hlplLKW42YF9Aib+wQyJpTeHxF32Fn
        QIvwGK3MVEp5qxHzAlrkjR0CWXMKj6/oO+wMaBEeo5WZSilvNWJeQIu8sUMga07h8RV9h50BLcJjtDJT
        KeWtRswLaJE3dghkzSk8vqLvsDOgRXiMVmYqpbzViHkBLfLGDu0mGp5KosueLa4auwNPbHY3UW9WZ/+l
        e2hlFaW6RNgbuwnnjQ3vJhqeSlRWccLhMVJZHaWyihPOGxveTTQ8lais4oTDY6SyOkplFSecNza8m2h4
        KlFZxQmHx+haygq/nng84fsE/JpjJnYevBmwN4CVyuoOeWPDu7HmVFa+2OxuwuExupay8sRmgZcddh7c
        V95UVpux5lRWvtjsbsLhMVJZHVFZxQnnjQ2D7A8Xvw3YvcCa88qK3buKfsj8b4bdBey5lR8yq6yOZMsq
        mrdorqNiXkCLvLGLQLaxo+HxyuoMnf2X7lLMC1j5fnbuWmV1JPr9KG93ELsIrJizUlnViHkBLcJjdPbe
        VFY1Yl5Ai7yxi8CKOSuVVY2YF9AiPEZn701lVSPmBbTIG7sIrJizUlnViHkBLcJjdPbeVFY1Yl5Ai7yx
        i8CKOSuVVY2YF9AiPEZn701lVSPmBbTIG7sIrJizUlnViHkBLcJjdPbeVFY1Yl5Ai7yxi8CKOSuVVY2Y
        F5D9fi7F3gDRd87eW0VZzfRh8GdCVsrbEfcdNgCy5lRWNWJeQIvwGJ29t51ltTOjytsR9x02ALLmVFY1
        Yl5Ai/AYnb03lVWNmBfQIm9sAGTNqaxqxLyAFuExOntvKqsaMS+gRd7YAMiaU1nViHkBLcJjdPbeVFY1
        Yl5Ai7yxAZA1p7KqEfMCWoTH6Oy9qaxqxLyAFnljAyBrTmVVI+YFVIfH/rDUgv8Jez/B6t3gK+HLgM1W
        82nA3gdPBxntzOgsb78G7M9ZzcuBFfMCWuSNGQMqqyMPvaxmyn4/Xg4q2fn97MzoLG/3xeXe2BnQIm/s
        Q5A1p7KqEfMCWoQnIJWVL5XVUe6u2Ycga05lVSPmBbQIT0AqK18qq6PcXbMPQdacyqpGzAtoEZ6AVFa+
        VFZHubtmH4KsOZVVjZgX0CI8AamsfKmsjnJ3zT4EWXMqqxoxL6BFeAJSWflSWR012fXN7V82MP/Zcvgg
        BQAAAABJRU5ErkJggg==
</value>
  </data>
</root>